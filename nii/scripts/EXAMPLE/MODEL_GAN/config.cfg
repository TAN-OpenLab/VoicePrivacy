
random_seed          = 1682086
max_epochs           = 60
train                = true

train_file           = ../DATA/data.nc1,../DATA/data.nc2
val_file             = ../DATA/data.nc1,../DATA/data.nc2


weights_dist         = uninorm
weights_normal_sigma = 0.1
weights_normal_mean  = 0
stochastic           = true
network              = ./network.jsn

Optimizer            = 1
learning_rate        = 0.001


validate_every       = 1
input_noise_sigma    = 0.0

shuffle_fractions    = false
shuffle_sequences    = true
momentum	     = 0
autosave 	     = false

# Early stopping parameter
# To train GANN, early stopping is not necessary
# But if you provide val_file, please make sure max_epochs_no_best > max_epochs
max_epochs_no_best   = 100      


# Path to the MDN configuration file
# Please use createMDNConfig.py to generate mdn.config
# Or, just use the pre-generated mdn.config
mdn_config           = ./mdn.config

# Path to the pre-trained acoustic model
trainedModel         = ../MODEL_CNN/trained_network.jsn

# Configuration to load the pre-trained acoustic model
#  the length of 1/0 is equal to the number of layers in network.jsn
#  the number of layers can be shown by ~$: cat network.jsn | grep name | wc -l

#  1 denotes loading the layer from pre-trained network
#  0 denotes skip loading that layer

#  here, the 4 hidden layers after the input layer need to be loaded from the trained network,
#  thus, there are four 1s after 0.
#  layer "fl1" "cn1" "fl2" and "output" in network.jsn will be loaded
trainedModelCtr      = 01111000000000000000000